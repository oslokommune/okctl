AWSTemplateFormatVersion: 2010-09-09
Outputs:
  okctlclusterRDSInstanceAdmin:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSInstanceAdmin
    Value:
      Ref: okctlclusterRDSInstanceAdmin
  okctlclusterRDSPGRotater:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSPGRotater
    Value:
      Fn::GetAtt:
      - okctlclusterRDSPGRotater
      - Arn
  okctlclusterRDSPGRotaterPolicy:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSPGRotaterPolicy
    Value:
      Ref: okctlclusterRDSPGRotaterPolicy
  okctlclusterRDSPGRotaterRoleArn:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSPGRotaterRoleArn
    Value:
      Fn::GetAtt:
      - okctlclusterRDSPGRotaterRole
      - Arn
  okctlclusterRDSPostgres:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSPostgres
    Value:
      Ref: okctlclusterRDSPostgres
  okctlclusterRDSPostgresEndpointAddress:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSPostgresEndpointAddress
    Value:
      Fn::GetAtt:
      - okctlclusterRDSPostgres
      - Endpoint.Address
  okctlclusterRDSPostgresEndpointPort:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSPostgresEndpointPort
    Value:
      Fn::GetAtt:
      - okctlclusterRDSPostgres
      - Endpoint.Port
  okctlclusterRDSPostgresOutgoing:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSPostgresOutgoing
    Value:
      Ref: okctlclusterRDSPostgresOutgoing
  okctlclusterRDSPostgresOutgoingGroupId:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlclusterRDSPostgresOutgoingGroupId
    Value:
      Fn::GetAtt:
      - okctlclusterRDSPostgresOutgoing
      - GroupId
Resources:
  okctlclusterRDSInstanceAdmin:
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        PasswordLength: 16
        RequireEachIncludedType: true
        SecretStringTemplate: '{"username": "admin"}'
      Name: /okctl/cluster/postgres_admin
    Type: AWS::SecretsManager::Secret
  okctlclusterRDSPGMonitoringRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - monitoring.rds.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      PermissionsBoundary: arn:aws:iam::123456789012:policy/oslokommune/oslokommune-boundary
      RoleName: okctlclusterRDSPGMonitoringRole
    Type: AWS::IAM::Role
  okctlclusterRDSPGOutgoingSG:
    Properties:
      GroupDescription: Rotater lambda function outgoing Security Group
      GroupName: okctlclusterRDSPGOutgoingSG
      SecurityGroupEgress:
      - CidrIp: 192.168.1.0/20
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      - CidrIp: 192.168.1.0/20
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      - CidrIp: 192.168.2.0/20
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      - CidrIp: 192.168.2.0/20
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::SecurityGroup
  okctlclusterRDSPGParamGroup:
    Properties:
      Description: Postgres 13 property group
      Family: postgres13
      Parameters:
        log_duration: "on"
        log_min_duration_statement: "1000"
        log_statement: all
        max_connections: "100"
        pg_stat_statements.max: "10000"
        pg_stat_statements.track: all
        shared_preload_libraries: pg_stat_statements
    Type: AWS::RDS::DBParameterGroup
  okctlclusterRDSPGRotater:
    Properties:
      Code: {}
      Environment:
        Variables:
          SECRETS_MANAGER_ENDPOINT: eyAiRm46OlNlbGVjdCI6IFsgJ1x4MDAnLCAgImV5QWlSbTQ2T2tkbGRFRjBkQ0lnT2lCYklDSnZhMk4wYkdOc2RYTjBaWEpTUkZOUVIxTk5WbEJEUlc1a2NHOXBiblFpTENBaVJHNXpSVzUwY21sbGN5SWdYU0I5IiBdIH0=
      FunctionName: okctlclusterrdspgrotater-Rotater
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
        - okctlclusterRDSPGRotaterRole
        - Arn
      Runtime: python3.8
      Timeout: 30
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - okctlclusterRDSPGOutgoingSG
          - GroupId
        SubnetIds:
        - dbsubnetid-123okf
        - dbsubnetid-fjeo338
    Type: AWS::Lambda::Function
  okctlclusterRDSPGRotaterPermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - okctlclusterRDSPGRotater
        - Arn
      Principal: secretsmanager.amazonaws.com
    Type: AWS::Lambda::Permission
  okctlclusterRDSPGRotaterPolicy:
    Properties:
      Description: okctlclusterRDSPGRotaterPolicy
      ManagedPolicyName: okctlclusterRDSPGRotaterPolicy
      PolicyDocument:
        Statement:
        - Action:
          - secretsmanager:DescribeSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:PutSecretValue
          - secretsmanager:UpdateSecretVersionStage
          Condition:
            StringEquals:
              secretsmanager:resource/AllowRotationLambdaArn:
                Fn::GetAtt:
                - okctlclusterRDSPGRotater
                - Arn
          Effect: Allow
          Resource:
          - '*'
        Version: 2012-10-17
    Type: AWS::IAM::ManagedPolicy
  okctlclusterRDSPGRotaterRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      PermissionsBoundary: arn:aws:iam::123456789012:policy/oslokommune/oslokommune-boundary
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - secretsmanager:GetRandomPassword
            Effect: Allow
            Resource:
            - '*'
          - Action:
            - ec2:CreateNetworkInterface
            - ec2:DeleteNetworkInterface
            - ec2:DescribeNetworkInterfaces
            Effect: Allow
            Resource:
            - '*'
          Version: 2012-10-17
        PolicyName: okctlclusterRDSPGRotaterPolicy
      RoleName: okctlclusterRDSPGRotaterRole
    Type: AWS::IAM::Role
  okctlclusterRDSPGSMVPCEndpoint:
    Properties:
      SecurityGroupIds:
      - Fn::GetAtt:
        - okctlclusterRDSPGSMVPCEndpointSG
        - GroupId
      ServiceName:
        Fn::Sub: com.amazonaws.${AWS::Region}.secretsmanager
      SubnetIds:
      - dbsubnetid-123okf
      - dbsubnetid-fjeo338
      VpcEndpointType: Interface
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::VPCEndpoint
  okctlclusterRDSPGSMVPCEndpointSG:
    Properties:
      GroupDescription: SecretsManager VPC Endpoint incoming
      GroupName: okctlclusterRDSPGSMVPCEndpointSG
      SecurityGroupIngress:
      - FromPort: 443
        IpProtocol: tcp
        SourceSecurityGroupId:
          Fn::GetAtt:
          - okctlclusterRDSPGOutgoingSG
          - GroupId
        ToPort: 443
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::SecurityGroup
  okctlclusterRDSPostgres:
    DependsOn:
    - okctlclusterRDSPGParamGroup
    - okctlclusterRDSPGMonitoringRole
    Properties:
      AllocatedStorage: "20"
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 7
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t3.small
      DBInstanceIdentifier: cluster-okctl
      DBName: okctl
      DBParameterGroupName:
        Ref: okctlclusterRDSPGParamGroup
      DBSubnetGroupName: myDBSubnetGroupName
      DeleteAutomatedBackups: true
      EnableCloudwatchLogsExports:
      - postgresql
      - upgrade
      EnablePerformanceInsights: true
      Engine: postgres
      EngineVersion: "13.1"
      MasterUserPassword:
        Fn::Sub: '{{resolve:secretsmanager:${okctlclusterRDSInstanceAdmin}::password}}'
      MasterUsername:
        Fn::Sub: '{{resolve:secretsmanager:${okctlclusterRDSInstanceAdmin}::username}}'
      MaxAllocatedStorage: 100
      MonitoringInterval: 10
      MonitoringRoleArn:
        Fn::GetAtt:
        - okctlclusterRDSPGMonitoringRole
        - Arn
      MultiAZ: true
      PerformanceInsightsRetentionPeriod: 7
      Port: "5432"
      PreferredBackupWindow: 03:00-06:00
      PreferredMaintenanceWindow: Mon:00:00-Mon:03:00
      StorageEncrypted: true
      StorageType: gp2
      UseDefaultProcessorFeatures: true
      VPCSecurityGroups:
      - Fn::GetAtt:
        - okctlclusterRDSPostgresIncoming
        - GroupId
    Type: AWS::RDS::DBInstance
  okctlclusterRDSPostgresIncoming:
    Properties:
      GroupDescription: RDS Postgres Incoming Security Group
      GroupName: okctlclusterRDSPostgresIncoming
      SecurityGroupIngress:
      - FromPort: 5432
        IpProtocol: tcp
        SourceSecurityGroupId:
          Fn::GetAtt:
          - okctlclusterRDSPostgresOutgoing
          - GroupId
        ToPort: 5432
      - FromPort: 5432
        IpProtocol: tcp
        SourceSecurityGroupId:
          Fn::GetAtt:
          - okctlclusterRDSPGOutgoingSG
          - GroupId
        ToPort: 5432
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::SecurityGroup
  okctlclusterRDSPostgresOutgoing:
    Properties:
      GroupDescription: RDS Postgres Outgoing Security Group
      GroupName: okctlclusterRDSPostgresOutgoing
      SecurityGroupEgress:
      - CidrIp: 192.168.1.0/20
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      - CidrIp: 192.168.2.0/20
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::SecurityGroup
  okctlclusterSecretTargetAttachment:
    Properties:
      SecretId:
        Ref: okctlclusterRDSInstanceAdmin
      TargetId:
        Ref: okctlclusterRDSPostgres
      TargetType: AWS::RDS::DBInstance
    Type: AWS::SecretsManager::SecretTargetAttachment
