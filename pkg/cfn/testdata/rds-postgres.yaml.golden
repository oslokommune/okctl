AWSTemplateFormatVersion: 2010-09-09
Outputs:
  okctlrepoenvRDSInstanceAdmin:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSInstanceAdmin
    Value:
      Ref: okctlrepoenvRDSInstanceAdmin
  okctlrepoenvRDSPostgres:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSPostgres
    Value:
      Ref: okctlrepoenvRDSPostgres
  okctlrepoenvRDSPostgresEndpointAddress:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSPostgresEndpointAddress
    Value:
      Fn::GetAtt:
      - okctlrepoenvRDSPostgres
      - Endpoint.Address
  okctlrepoenvRDSPostgresEndpointPort:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSPostgresEndpointPort
    Value:
      Fn::GetAtt:
      - okctlrepoenvRDSPostgres
      - Endpoint.Port
  okctlrepoenvRDSPostgresLambdaManagedPolicy:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSPostgresLambdaManagedPolicy
    Value:
      Ref: okctlrepoenvRDSPostgresLambdaManagedPolicy
  okctlrepoenvRDSPostgresLambdaRotateFunction:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSPostgresLambdaRotateFunction
    Value:
      Fn::GetAtt:
      - okctlrepoenvRDSPostgresLambdaRotateFunction
      - Arn
  okctlrepoenvRDSPostgresLambdaRotateRoleArn:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSPostgresLambdaRotateRoleArn
    Value:
      Fn::GetAtt:
      - okctlrepoenvRDSPostgresLambdaRotateRole
      - Arn
  okctlrepoenvRDSPostgresOutgoing:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSPostgresOutgoing
    Value:
      Ref: okctlrepoenvRDSPostgresOutgoing
  okctlrepoenvRDSPostgresOutgoingGroupId:
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-okctlrepoenvRDSPostgresOutgoingGroupId
    Value:
      Fn::GetAtt:
      - okctlrepoenvRDSPostgresOutgoing
      - GroupId
Resources:
  okctlrepoenvRDSInstanceAdmin:
    Properties:
      GenerateSecretString:
        ExcludePunctuation: true
        GenerateStringKey: password
        PasswordLength: 16
        RequireEachIncludedType: true
        SecretStringTemplate: '{"username": "admin"}'
      Name: /okctl/repo/env/postgres_admin
    Type: AWS::SecretsManager::Secret
  okctlrepoenvRDSPostgres:
    DependsOn:
    - okctlrepoenvRDSPostgresParameterGroup
    - okctlrepoenvRDSPostgresMonitoringRole
    Properties:
      AllocatedStorage: "20"
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 7
      CopyTagsToSnapshot: true
      DBInstanceClass: db.t3.small
      DBInstanceIdentifier: repo-env-okctl
      DBName: okctl
      DBParameterGroupName:
        Ref: okctlrepoenvRDSPostgresParameterGroup
      DBSubnetGroupName: myDBSubnetGroupName
      DeleteAutomatedBackups: true
      EnableCloudwatchLogsExports:
      - postgresql
      - upgrade
      EnablePerformanceInsights: true
      Engine: postgres
      EngineVersion: "13.1"
      MasterUserPassword:
        Fn::Sub: '{{resolve:secretsmanager:${okctlrepoenvRDSInstanceAdmin}::password}}'
      MasterUsername:
        Fn::Sub: '{{resolve:secretsmanager:${okctlrepoenvRDSInstanceAdmin}::username}}'
      MaxAllocatedStorage: 100
      MonitoringInterval: 10
      MonitoringRoleArn:
        Fn::GetAtt:
        - okctlrepoenvRDSPostgresMonitoringRole
        - Arn
      MultiAZ: true
      PerformanceInsightsRetentionPeriod: 7
      Port: "5432"
      PreferredBackupWindow: 03:00-06:00
      PreferredMaintenanceWindow: Mon:00:00-Mon:03:00
      StorageEncrypted: true
      StorageType: gp2
      UseDefaultProcessorFeatures: true
      VPCSecurityGroups:
      - Fn::GetAtt:
        - okctlrepoenvRDSPostgresIncoming
        - GroupId
    Type: AWS::RDS::DBInstance
  okctlrepoenvRDSPostgresIncoming:
    Properties:
      GroupDescription: RDS Postgres Incoming Security Group
      GroupName: okctlrepoenvRDSPostgresIncoming
      SecurityGroupIngress:
      - FromPort: 5432
        IpProtocol: tcp
        SourceSecurityGroupId:
          Fn::GetAtt:
          - okctlrepoenvRDSPostgresOutgoing
          - GroupId
        ToPort: 5432
      - FromPort: 5432
        IpProtocol: tcp
        SourceSecurityGroupId:
          Fn::GetAtt:
          - okctlrepoenvRotaterLambdaOutgoingSecurityGroup
          - GroupId
        ToPort: 5432
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::SecurityGroup
  okctlrepoenvRDSPostgresLambdaManagedPolicy:
    Properties:
      Description: okctlrepoenvRDSPostgresLambdaManagedPolicy
      ManagedPolicyName: okctlrepoenvRDSPostgresLambdaManagedPolicy
      PolicyDocument:
        Statement:
        - Action:
          - secretsmanager:DescribeSecret
          - secretsmanager:GetSecretValue
          - secretsmanager:PutSecretValue
          - secretsmanager:UpdateSecretVersionStage
          Condition:
            StringEquals:
              secretsmanager:resource/AllowRotationLambdaArn:
                Fn::GetAtt:
                - okctlrepoenvRDSPostgresLambdaRotateFunction
                - Arn
          Effect: Allow
          Resource:
          - '*'
        Version: 2012-10-17
    Type: AWS::IAM::ManagedPolicy
  okctlrepoenvRDSPostgresLambdaRotateFunction:
    Properties:
      Code: {}
      Environment:
        Variables:
          SECRETS_MANAGER_ENDPOINT: eyAiRm46OlNlbGVjdCI6IFsgJ1x4MDAnLCAgImV5QWlSbTQ2T2tkbGRFRjBkQ0lnT2lCYklDSnZhMk4wYkhKbGNHOWxiblpUWldOeVpYUnpUV0Z1WVdkbGNsWlFRMFZ1WkhCdmFXNTBJaXdnSWtSdWMwVnVkSEpwWlhNaUlGMGdmUT09IiBdIH0=
      FunctionName: okctlrepoenvrdspostgreslambdarotatefunction-Rotater
      Handler: lambda_function.lambda_handler
      Role:
        Fn::GetAtt:
        - okctlrepoenvRDSPostgresLambdaRotateRole
        - Arn
      Runtime: python3.8
      Timeout: 30
      VpcConfig:
        SecurityGroupIds:
        - Fn::GetAtt:
          - okctlrepoenvRotaterLambdaOutgoingSecurityGroup
          - GroupId
        SubnetIds:
        - dbsubnetid-123okf
        - dbsubnetid-fjeo338
    Type: AWS::Lambda::Function
  okctlrepoenvRDSPostgresLambdaRotatePermission:
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
        - okctlrepoenvRDSPostgresLambdaRotateFunction
        - Arn
      Principal: secretsmanager.amazonaws.com
    Type: AWS::Lambda::Permission
  okctlrepoenvRDSPostgresLambdaRotateRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      PermissionsBoundary: arn:aws:iam::123456789012:policy/oslokommune/oslokommune-boundary
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - secretsmanager:GetRandomPassword
            Effect: Allow
            Resource:
            - '*'
          - Action:
            - ec2:CreateNetworkInterface
            - ec2:DeleteNetworkInterface
            - ec2:DescribeNetworkInterfaces
            Effect: Allow
            Resource:
            - '*'
          Version: 2012-10-17
        PolicyName: okctlrepoenvRDSPostgresLambdaRotatePolicy
      RoleName: okctlrepoenvRDSPostgresLambdaRotateRole
    Type: AWS::IAM::Role
  okctlrepoenvRDSPostgresMonitoringRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - monitoring.rds.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
      PermissionsBoundary: arn:aws:iam::123456789012:policy/oslokommune/oslokommune-boundary
      RoleName: okctlrepoenvRDSPostgresMonitoringRole
    Type: AWS::IAM::Role
  okctlrepoenvRDSPostgresOutgoing:
    Properties:
      GroupDescription: RDS Postgres Outgoing Security Group
      GroupName: okctlrepoenvRDSPostgresOutgoing
      SecurityGroupEgress:
      - CidrIp: 192.168.1.0/20
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      - CidrIp: 192.168.2.0/20
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::SecurityGroup
  okctlrepoenvRDSPostgresParameterGroup:
    Properties:
      Description: Postgres 13 property group
      Family: postgres13
      Parameters:
        log_duration: "on"
        log_min_duration_statement: "1000"
        log_statement: all
        max_connections: "100"
        pg_stat_statements.max: "10000"
        pg_stat_statements.track: all
        shared_preload_libraries: pg_stat_statements
    Type: AWS::RDS::DBParameterGroup
  okctlrepoenvRotaterLambdaOutgoingSecurityGroup:
    Properties:
      GroupDescription: Rotater lambda function outgoing Security Group
      GroupName: okctlrepoenvRotaterLambdaOutgoingSecurityGroup
      SecurityGroupEgress:
      - CidrIp: 192.168.1.0/20
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      - CidrIp: 192.168.1.0/20
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      - CidrIp: 192.168.2.0/20
        FromPort: 443
        IpProtocol: tcp
        ToPort: 443
      - CidrIp: 192.168.2.0/20
        FromPort: 5432
        IpProtocol: tcp
        ToPort: 5432
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::SecurityGroup
  okctlrepoenvSecretTargetAttachment:
    Properties:
      SecretId:
        Ref: okctlrepoenvRDSInstanceAdmin
      TargetId:
        Ref: okctlrepoenvRDSPostgres
      TargetType: AWS::RDS::DBInstance
    Type: AWS::SecretsManager::SecretTargetAttachment
  okctlrepoenvSecretsManagerVPCEndpoint:
    Properties:
      SecurityGroupIds:
      - Fn::GetAtt:
        - okctlrepoenvSecretsManagerVPCEndpointSecurityGroup
        - GroupId
      ServiceName:
        Fn::Sub: com.amazonaws.${AWS::Region}.secretsmanager
      SubnetIds:
      - dbsubnetid-123okf
      - dbsubnetid-fjeo338
      VpcEndpointType: Interface
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::VPCEndpoint
  okctlrepoenvSecretsManagerVPCEndpointSecurityGroup:
    Properties:
      GroupDescription: SecretsManager VPC Endpoint incoming
      GroupName: okctlrepoenvSecretsManagerVPCEndpointSecurityGroup
      SecurityGroupIngress:
      - FromPort: 443
        IpProtocol: tcp
        SourceSecurityGroupId:
          Fn::GetAtt:
          - okctlrepoenvRotaterLambdaOutgoingSecurityGroup
          - GroupId
        ToPort: 443
      VpcId: vpcid-w9ufe
    Type: AWS::EC2::SecurityGroup
